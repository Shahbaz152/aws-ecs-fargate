version: 0.2

env:
  variables:
    PROJECT_KEY: "Shahbaz152_aws-ecs-fargate"
    SONAR_ORG: "shahbaz152"
    DB_HOST: "database-1.cszllb51zalf.us-east-1.rds.amazonaws.com"
    DB_PORT: "5432"
    DB_USER: "postgres"
    DB_NAME: "postgres"
    LAMBDA_FUNCTION: "sonar-alert-lambda"
  secrets-manager:
    SONAR_TOKEN: "sonarcloud-secret:sonar-token"
    DB_PASS: "db-secret:password"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Installing SonarScanner..."
      - apt-get update -y
      - apt-get install -y wget unzip jq
      - echo "Downloading SonarScanner CLI..."
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
      - unzip sonar-scanner-cli-5.0.1.3006-linux.zip
      - mv sonar-scanner-*/ sonar-scanner
      - export PATH=$PATH:$(pwd)/sonar-scanner/bin
      - echo "SonarScanner installed."
      - echo "Installing jq and PostgreSQL client..."
      - apt-get install -y  postgresql jq

  pre_build:
    commands:
     
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 471101288063.dkr.ecr.us-east-1.amazonaws.com
  build:
    commands:
      - echo "Running SonarCloud analysis..."
      - |
        sonar-scanner -Dsonar.projectKey=$PROJECT_KEY -Dsonar.organization=$SONAR_ORG -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true || echo "SONAR_FAILED=true" >> env_vars.txt
      - |
        if grep -q "SONAR_FAILED=true" env_vars.txt; then
          echo "❌ Sonar analysis failed. Logging to PostgreSQL and triggering Lambda..."
          mkdir -p /codebuild/output/tmp
          touch /codebuild/output/tmp/lambda-output.json
          chmod 644 /codebuild/output/tmp/lambda-output.json

          COMMIT_ID=$(git rev-parse --short HEAD)
          psql "host=$DB_HOST port=$DB_PORT dbname=$DB_NAME user=$DB_USER password=$DB_PASS" -c \
            "INSERT INTO code_analysis_logs (commit_id, status, message, created_at) VALUES ('$COMMIT_ID', 'FAILED', 'SonarCloud quality gate failed.', NOW());"

          PAYLOAD=$(jq -n \
            --arg commit_id "$CODEBUILD_RESOLVED_SOURCE_VERSION" \
            --arg status "FAILED" \
            --arg message "SonarCloud quality gate failed." \
            '{commit_id: $commit_id, status: $status, message: $message}')

          aws lambda invoke \
            --function-name $LAMBDA_FUNCTION \
            --payload "$PAYLOAD" \
            --cli-binary-format raw-in-base64-out \
            /codebuild/output/tmp/lambda-output.json

          echo "Exiting build due to Sonar failure."
          exit 1
        else
          echo "✅ Quality Gate passed. Proceeding with Docker build..."
          docker build -t ecswithpipeline:latest .
          docker tag ecswithpipeline:latest 471101288063.dkr.ecr.us-east-1.amazonaws.com/ecswithpipeline:latest
        fi

  post_build:
    commands:
      - docker push 471101288063.dkr.ecr.us-east-1.amazonaws.com/ecswithpipeline:latest
      - printf '[{"name":"apache-cicd","imageUri":"%s"}]' 471101288063.dkr.ecr.us-east-1.amazonaws.com/ecswithpipeline:latest > imagedefinitions.json
