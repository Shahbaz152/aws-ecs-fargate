version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    ECR_REPO_NAME: "ecswithpipeline"
    IMAGE_TAG: "latest"
    CONTAINER_NAME: "apache-cicd"
    TASK_FAMILY: "mytask"
    EXECUTION_ROLE_ARN: "arn:aws:iam::471101288063:role/ecsTaskExecutionRole"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 471101288063.dkr.ecr.$AWS_REGION.amazonaws.com
      - IMAGE_URI=471101288063.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
      - docker tag $ECR_REPO_NAME:$IMAGE_TAG $IMAGE_URI

  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $IMAGE_URI
      - echo Writing taskdef.json...
      - |
        cat <<EOF > taskdef.json
        {
          "family": "$TASK_FAMILY",
          "executionRoleArn": "$EXECUTION_ROLE_ARN",
          "networkMode": "awsvpc",
          "containerDefinitions": [
            {
              "name": "$CONTAINER_NAME",
              "image": "$IMAGE_URI",
              "portMappings": [
                {
                  "containerPort": 5000,
                  "hostPort": 5000
                }
              ],
              "essential": true
            }
          ],
          "requiresCompatibilities": ["FARGATE"],
          "cpu": "1024",
          "memory": "3072"
        }
        EOF
      - cat taskdef.json
      - echo Writing imagedefinitions.json...
      - |
        cat <<EOF > imagedefinitions.json
        [
          {
            "name": "$CONTAINER_NAME",
            "imageUri": "$IMAGE_URI"
          }
        ]
        EOF
      - cat imagedefinitions.json

artifacts:
  files:
    - appspec.yaml
    - taskdef.json
    - imagedefinitions.json
